# Download base image ubuntu 18.04
FROM ubuntu:20.04

# Default values if not passed on the build command line
ARG host_uid=1000
ARG host_gid=1000
ARG USERNAME=user
ARG TZ_VALUE="Etc/UTC"

# use bash instead of dash as default /bin/sh
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Install tzdata and set up time zone
ENV TZ=$TZ_VALUE
RUN apt update -y && apt install -y apt-utils sudo

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata
RUN ln -sf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ_VALUE > /etc/timezone \
    && dpkg-reconfigure -f noninteractive tzdata

# Install packages necessary for building network build images
RUN \
	apt install -y \
	    systemctl \
		tftp \
		tftpd-hpa \
		nfs-common \
		nfs-kernel-server \
		cu
		
# Setup TFTP boot
RUN mkdir /tftpboot && mkdir /nfs -p 
RUN sed -i 's/srv\/tftp/tftpboot/' /etc/default/tftpd-hpa
RUN systemctl enable tftpd-hpa
RUN systemctl restart tftpd-hpa
RUN chmod 777 /tftpboot

# Setup NFS Boot
RUN mkdir /nfs/ -p && mkdir /nfs/rzv2l -p
#RUN /etc/init.d/nfs-kernel-server start
RUN echo "/nfs/rzv2l *(rw,no_subtree_check,sync,no_root_squash)" >> /etc/exports
#RUN exportfs -a
          
# Setup locales
RUN \
	apt install -y locales && \
	rm -rf /var/lib/apt/lists/*
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    dpkg-reconfigure --frontend=noninteractive locales && \
    update-locale LANG=en_US.UTF-8

ENV LANG en_US.UTF-8

# Add user account that matches the host
RUN groupadd -g $host_gid $USERNAME
RUN adduser --disabled-password --shell /bin/bash \
    --uid $host_uid --gid $host_gid \
    --gecos '' $USERNAME
RUN adduser $USERNAME sudo

# Add to the sudoers list (allow for sudo to run without password)
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# To have a more colorful world
ENV TERM xterm-256color

# Start the container with user $USERNAME
USER $USERNAME

# Change the prompt
RUN echo PS1=\"\\[\\e[33m\\]dir\:\ \\w\\n\\[\\e[1\;31m\\]\\u\@\(docker\)\$\\[\\e[00m\\]\ \" >> ~/.bashrc
RUN echo printf=\"\\e]2\;docker\\a\" >> ~/.bashrc
CMD /etc/init.d/nfs-kernel-server start && exportfs -a && showmount -e localhost && bash
